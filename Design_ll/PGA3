/*
 * C. Timm  3/20/2017  PGA3_Timm
 * Program that cyles through 6 leds in an array 
 * it cycles up through the leds[] fading them on and off each time 
 * than cyles through the leds[] backwards fading the leds on and off
 * as it goes.
 */
#define btn digitalRead(4)
 
#include <LiquidCrystal_I2C.h>
#include <Wire.h>
LiquidCrystal_I2C lcd(0x20, 20,2);

const byte leds[] = {3,5,6,9,10,11};

 byte amLeds = (sizeof(leds)/sizeof(byte)-1), del = 10, steps = 5 ;

void setup() {
  
  lcd.init();
  lcd.print("PGA 3");
  
  for(int led = 0; led <= amLeds; led++)
    pinMode(led,OUTPUT);
    pinMode(4,INPUT);
 }

void loop() {

    ledFor();
    ledBac();
    
  while (btn); // while the button is not pressed do nothing
   
}

/*
 * Loops through leds[] in the forward direction 
 * i.e. 3,5,6,9,10,11 and passes each led value 
 * to the fade(int) function 
 */
void ledFor()
{
  for(int led = 0; led <= amLeds; led++)
     fade(led);
}

/*
 * Loops through leds[] in the backwards direction 
 * i.e. 10,9,6,5,3 and passes each led value 
 * to the fade(int) function. Doesnt pass 11
 * becaseu we dont want to fade the last led
 * twice
 */
void ledBac()
{
  for(int k = amLeds-1; k >= 0; k--)   
     fade(k);
}
/*
 * Fades led from 0 to 255 first in steps of the
 * varible "steps" which is defined above.
 * Then fades led from 255 to 0 in using the 
 * same value of "steps" than turns off led
 * so gwet ride of the residuale 
*/
void fade(int led)
{
    for(int i =0; i <= 255; i+=steps)
      {
        analogWrite(leds[led], i);
        delay(del);
      }
   for(int j = 255 ; j >= 0; j-=steps)
     {
       analogWrite(leds[led], j);
       delay(del);
     }
    
}
