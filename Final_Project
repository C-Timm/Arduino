/*
    Final Project
*/

#include <NewPing.h> 
#include <LiquidCrystal_I2C.h>
#include <Wire.h>


LiquidCrystal_I2C lcd(0x20,16,2);
NewPing sonar(12,13,200);


          //pin varibles
  const unsigned      trig = 12, echo = 13,  
                      Pbtn =8, Cbtn=7,
                      led =10, re =9 ;
                      
          //varibles for toggle switch
  uint8_t  state= HIGH, reading , prev = LOW; 
  uint8_t count;
  long t =0, debounce =10;
         
     
         char readyto[] = "Ready to ARM";
         char armed[] = "ARMED";
         char* last;
         char US[] = "inches/ second";
         char RestoftheWorld[] = "meters/second";
         
        float dist  = 0.0;
        float startDis = 35.0, endDis = 15.0;
        float  sTime=0.0, elapse = 0.0 ;
        
        
        float inches = 20.0, meteric = 0.508,d ;
      
      bool i;  
   bool why ;     

void Display(char*,float);
char distCalc();       
bool timer();
bool power();

void setup()
  {
  
    lcd.init();
    sonar.ping();
    delay(50);
    pinMode(trig,OUTPUT);
    pinMode(echo,INPUT);
    pinMode(Pbtn, INPUT);
    pinMode(led,OUTPUT);
    pinMode(re,OUTPUT);
     
  }

void loop()
{
 
  if (power() == true)
  {

   if (timer() == false)
    {
      lcd.clear();
        count++;
    }
  }
  
  while(count == 1)
  {
     while(!digitalRead(Cbtn))
     {
        if ( i== true)
            Display(US,inches);
            i = false;
          
     }  
     if(i== false)
     {
           Display(RestoftheWorld, meteric);
           i = true;
     }

  }
       
}
   
 /*
  * Needs to commentted
  */
bool power()
{
            
   reading = digitalRead(Pbtn);
   if(reading == HIGH && prev == LOW && millis()- t > debounce )
   {
     if(state == HIGH && last != readyto)
     {
       state = LOW;
       lcd.clear();
        lcd.print(readyto);
        last = readyto;
        why = false;
        
     }
     else
     {
        state = HIGH;
        
        lcd.clear();
        lcd.print(armed);
        last = armed;
        why = true;
     }
       
       t = millis();
   }
   
   digitalWrite(re, state);
   digitalWrite(led, state);

   prev = reading;
 return why;  
}


bool timer()
{
 if(sonar.ping_in() == startDis)
   {
      sTime = millis();
       digitalWrite(re,LOW);
      digitalWrite(led,LOW);
      delay(100);
      digitalWrite(re, HIGH);
      digitalWrite(led, HIGH);
             
      delay(50);
      while(sTime >0)
      {
      d = sonar.ping_in(); 
         if (d == endDis)
           {
              elapse = millis() - sTime;
               
              state = LOW; 
             
              digitalWrite(re, state);
              digitalWrite(led, state);
             
              return false;
           }
           delay(50);
      }
   } 
 delay(50);
 
}

void Display(char* phrase,float unit)
{
  lcd.clear();
     lcd.print(unit/(elapse/1000),4);
      lcd.setCursor(0,1);
     lcd.print(phrase);
}
