/*
    Final Project     Group B1 : Christopher Timm     12/9/2016
    
    This program controls the power to a drill through a relay, 
    the drill is used to power a gear box that is lifting a mass.
    A range finder is used to calcuates the velocty of a mass 
    that is moved 1 meter the velocity can be displayed in
    meters/seconds and inches/seconds switchable by a button.
    
    Pins:
      12 - TRIGER: range finder
      13 - ECHO: range finder
      10 - LED: indicates power is on or off
      9  - RELAY 
      8  - BUTTON : on/off power 
      7  - BUTTON: for displaying calcuations
      6  - LED :that flashes when the timer starts //not needed but helpful for testing and other things
      
      
*/
typedef float ufloat16_t;

#include <NewPing.h> 
#include <LiquidCrystal_I2C.h>
#include <Wire.h>


LiquidCrystal_I2C lcd(0x20,16,2);  //library for LCD
NewPing sonar(12,13,200);  //library for LCD


//---------Functions---------\\
  void Display(char*,float);
  char distCalc();       
  bool timer();
  bool power();

      //----------------------Variables----------------------\\
         
         //--pin assignments ------------------------->  // uint8_t is a type of unsigned 
            uint8_t     trig = 12, echo = 13,            // integer with a length 8 bits 
                        Pbtn = 8,  Cbtn = 7,
                        led = 10,  re = 9, 
                        timerLight = 6,
                      
          //--varibles for toggle switch   
                        state= HIGH, reading,
                        prev = LOW,  count,
                        del = 50,    t, 
                        debounce = 10;
          
  
         //--Phrases to be printed
           char US[] = "inches/seconds  ";
           char RestoftheWorld[] = "meters/seconds  ";
           char readyto[] = "Ready to ARM";
           char armed[] = "ARMED";
           char* last;
           
        //--distances, times, units
          ufloat16_t   startDis = 35.0,  endDis = 15.0, 
                       sTime,            elapse,
                       inches = 20.0,    meteric = 0.508,
                       dist ;
                
        //--testing contions ... more or less
          bool         i , why;  

void setup()
  {
    lcd.init();
    sonar.ping();
    delay(del);
    pinMode(trig,OUTPUT);
    pinMode(echo,INPUT);
    pinMode(Pbtn, INPUT);
    pinMode(led,OUTPUT);
    pinMode(re,OUTPUT);
    pinMode(timerLight,OUTPUT);
  }

void loop()
{
 
  if (power() == true)
  {

   if (timer() == false)
    {
      lcd.clear();
        count++;
    }
  }
  
  while(count == 1)
  {
     while(!digitalRead(Cbtn))
     {
        if (i == true)
            Display(US,inches);
            i = false;
          
     }  
         if(i== false)
     {
           Display(RestoftheWorld, meteric);
           i = true;
     }

  }
     
}
   
 /*
  * 
  */
bool power()
{
            
   reading = digitalRead(Pbtn);
   if(reading == HIGH && prev == LOW && millis()- t > debounce )
   {
     if(state == HIGH && last != readyto)
     {
        state = LOW;
        lcd.clear();
        lcd.print(readyto);
        last = readyto;
        why = false;
        
     }
     else
     {
        state = HIGH;
        lcd.clear();
        lcd.print(armed);
        last = armed;
        why = true;
     }
       
       t = millis();
   }
   
   digitalWrite(re, state);
   digitalWrite(led, state);

   prev = reading;
 return why;  
}


bool timer()
{
  dist= sonar.ping_in(); 
 if(dist <= startDis + 0.5 && dist >=startDis - 0.5)
   {
      sTime = millis();
       digitalWrite(timerLight,HIGH);
      delay(del*2);
      digitalWrite(timerLight, LOW);
   
             
      delay(del);
      while(sTime > 0)
      {
      dist = sonar.ping_in(); 
         if (dist <= endDis+0.5 && dist >=endDis-0.5)
           {
              elapse = millis() - sTime;
               
              state = LOW; 
             
              digitalWrite(re, state);
              digitalWrite(led, state);
              digitalWrite(timerLight,HIGH);
             
              return false;
           }
           delay(del);
      }
   } 
 delay(del);
 
}

void Display(char* phrase,float unit)
{
     lcd.clear();
     lcd.print(unit/(elapse/1000),4);
      lcd.setCursor(0,1);
     lcd.print(phrase);
}
