/*
    Final Project
*/

#include <NewPing.h> 
#include <LiquidCrystal_I2C.h>
#include <Wire.h>


LiquidCrystal_I2C lcd(0x20,16,2);
NewPing sonar(12,13,200);

const unsigned trig = 12, echo = 13,   //trigger and echo ping for rang finder
                    Pbtn =8,led =10,  //Pbtn is the power button and led well... its the led
                    re =9, Cbtn = 7, btn = 5;            //pin for the relay;
         
         int state= HIGH, reading , prev = LOW; 
         int state2 = HIGH, reading2 , prev2 = LOW; 
       
         long t =0, debounce =10;
         long t2 =0, debounce2 =10;
         
         char readyto[] = "Ready to ARM";
         char armed[] = "ARMED";
         char* last;
         char US[] = "inches/ second";
         char RestoftheWorld[] = "meters/second";
         char* lastCalc;
         
        float dist  = 0.0;
        float startDis = 35.0, endDis = 15.0;
        float  sTime, elapse;
        
        
        float inches = 39.37007874;
        
   bool why ;     


int distCalc();       
int clearLcd();
bool timer();
bool power();

void setup()
  {
  
    lcd.init();
    sonar.ping();
    delay(50);
    pinMode(trig,OUTPUT);
    pinMode(echo,INPUT);
    pinMode(Pbtn, INPUT);
    pinMode(led,OUTPUT);
    pinMode(re,OUTPUT);
     
  }

void loop()
{
 
  while( power() == true)
  {

    if (timer() == true)
    {
        while(digitalRead(Cbtn) == 0)
        {
          distCalc();
        }
        
      break;
    }
    
  }
}

int distCalc()
{
     
   reading2 = digitalRead(Cbtn);
   if(reading2 == HIGH && prev2 == LOW && millis()- t2 > debounce2 )
   {
     if(state2 == HIGH)
       state2 = LOW;
     else
       state2 = HIGH;
       
       t2 = millis();
   }
   
    
if(state2 == HIGH && lastCalc != US)
   {
      lcd.clear();
      lcd.print(inches/elapse);
      lcd.setCursor(0,1);
      lcd.print(US);
      lastCalc = US;
   }
   if(state2 == LOW && lastCalc != RestoftheWorld)
   {
     lcd.clear();
     lcd.print(1/elapse);
     lcd.setCursor(0,1);
     lcd.print(RestoftheWorld);
     lastCalc = RestoftheWorld;
   }
   prev2 = reading2;
    if(digitalRead(btn)==1)
  {
    clearLcd();
    return 0;
  }
}

 
 /*
  * Needs to commentted
  */
bool power()
{
   reading = digitalRead(Pbtn);
   if(reading == HIGH && prev == LOW && millis()- t > debounce )
   {
     if(state == HIGH)
       state = LOW;
     else
       state = HIGH;
       
       t = millis();
   }
   
   digitalWrite(re, state);
   digitalWrite(led, state);
   
   if(state == HIGH && last != armed)
   {
      lcd.clear();
      lcd.print(armed);
      last = armed;
      why = true;

   }
   if(state == LOW && last != readyto)
   {
     lcd.clear();
     lcd.print(readyto);
     last = readyto;
    why = false;
   }
   prev = reading;
 return why;  
}


bool timer()
{
  delay(50);
    while(sonar.ping_in() <= startDis )
   {
      sTime = millis();
      delay(50);
     lcd.setCursor(0,1);
      lcd.print(sonar.ping_in());
      
        if(sonar.ping_in() == endDis)
           {
              elapse = millis() - sTime;
             /* lcd.clear();
              lcd.print("It took");
              lcd.setCursor(0,1);
              lcd.print(elapse);
              */

              digitalWrite(re, LOW);
              digitalWrite(led, LOW);
              break;
             
           }
           delay(50);
   }  
   
   if(elapse > 0.5 )
   {
       return true;
   }
}


int clearLcd()
{
  
     sTime=0;
     elapse =0;
     lcd.clear();
   
   return 0;
}
